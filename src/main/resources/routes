# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Routes for the API
GET         /apprenticeship-levy/                                    uk.gov.bis.levyApiMock.controllers.RootController.root()


GET         /apprenticeship-levy/epaye/*empref/employed/:nino        uk.gov.bis.levyApiMock.controllers.EmploymentController.employmentCheck(empref:EmpRef, nino:String, fromDate:LocalDate, toDate:LocalDate)
GET         /apprenticeship-levy/epaye/*empref/declarations          uk.gov.bis.levyApiMock.controllers.LevyDeclarationController.levyDeclarations(empref: EmpRef, fromDate: Option[LocalDate], toDate: Option[LocalDate])
GET         /apprenticeship-levy/epaye/*empref/fractions             uk.gov.bis.levyApiMock.controllers.FractionsController.fractions(empref: EmpRef, fromDate: Option[LocalDate], toDate: Option[LocalDate])

# Needs to come last as it will consume the whole remainder of the url for the empref
GET         /apprenticeship-levy/epaye/*empref                       uk.gov.bis.levyApiMock.controllers.EmprefController.empref(empref: EmpRef)

GET         /apprenticeship-levy/fraction-calculation-date           uk.gov.bis.levyApiMock.controllers.FractionsController.calculationDate()

# A bug in WS02 means that on the live service the userinfo endpoint must be called with a trailing slash
GET         /userinfo/                                               uk.gov.bis.userinfoApiMock.controllers.UserInfoController.userinfo()
GET         /userinfo                                                uk.gov.bis.userinfoApiMock.controllers.UserInfoController.userinfo()

POST        /oauth/token                                             uk.gov.bis.oauth.controllers.OAuth2Controller.accessToken
GET         /oauth/authorize                                         uk.gov.bis.oauth.controllers.ClaimAuthController.authorize(scope: String, client_id:String, redirect_uri :String, state:Option[String])
POST        /oauth/authorize                                         uk.gov.bis.oauth.controllers.ClaimAuthController.authorizePost
GET         /oauth/grantscope                                        uk.gov.bis.oauth.controllers.GrantScopeController.show(auth_id: Long)

GET         /test/generate-token                                     uk.gov.bis.oauth.controllers.TestController.generateToken(secret: String, ts: Option[Long])
GET         /test/check-token                                        uk.gov.bis.oauth.controllers.TestController.checkToken(secret: String, token:String,  ts: Option[Long])

# Health check
GET         /ping                                                    uk.gov.bis.controllers.HealthCheckController.ping()
GET         /version                                                 uk.gov.bis.controllers.HealthCheckController.version()
